name: Test

on:
  schedule:
    - cron: "0 0 1 * *"
  push:
    branches:
      - main
  pull_request:
  workflow_call:

env:
  DEFAULT_NODE_VERSION: 18

jobs:
  test:
    name: Test

    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        node-version:
          - 16
          - 18

    runs-on: ${{ matrix.os }}

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Use PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm i

      - name: Check code styles
        run: pnpm lint

      - name: Build the project
        run: pnpm build

      - name: Generate code documents
        run: pnpm document

      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: Test the project
        run: pnpm test:ci --maxWorkers ${{ steps.cpu-cores.outputs.count }}

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v3
        if: ${{ runner.os == 'Linux' && runner.arch == 'X64' && github.event_name != 'schedule'}}
        env:
          OS: ${{ runner.os }}
          ARCH: ${{ runner.arch }}
          NODE_VERSION: ${{ matrix.node-version }}
          REF: ${{ github.ref_name }}
        with:
          flags: config,foxify,fresh,inject
          env_vars: OS,ARCH,NODE_VERSION,REF
          fail_ci_if_error: true

  test-summary:
    name: Test Summary

    needs:
      - test

    if: ${{ always() && github.event_name == 'pull_request' }}

    runs-on: ubuntu-latest

    steps:
      - name: Check test matrix status
        if  : ${{ needs.test.result != 'success' }}
        run : exit 1

  release-pr:
    name: Create Release Pull Request

    if: ${{ github.event_name == 'push' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Install dependencies
        run: pnpm i

      - name: Create Release Pull Request
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
